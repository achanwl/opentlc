- name: Create debug project with tolerations for infra node debug pods
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: debug
        annotations:
          openshift.io/node-selector: ""
          scheduler.alpha.kubernetes.io/defaultTolerations: '[{"operator": "Exists"}]'

- name: Get a list of infra nodes
  k8s_info:
    kind: Node
    label_selectors:
      - node-role.kubernetes.io/infra
  register: infranode_list

- name: Remove worker label from infra nodes
  k8s:
    api_version: v1
    kind: Node
    name: "{{ item }}"
    definition:
      metadata:
        labels:
          node-role.kubernetes.io/worker: null
  with_items: "{{ infranode_list | json_query('resources[].metadata.name') }}"

- name: Create MachineConfigPool infra
  k8s:
    state: present
    definition:
      apiVersion: machineconfiguration.openshift.io/v1
      kind: MachineConfigPool
      metadata:
        name: infra
      spec:
        machineConfigSelector:
          matchExpressions:
            - {key: machineconfiguration.openshift.io/role, operator: In, values: [worker,infra]}
        nodeSelector:
          matchLabels:
            node-role.kubernetes.io/infra: ""

- name: Config allocated resources for nodes
  block:
    - name: Label MCPs
      k8s:
        api_version: machineconfiguration.openshift.io/v1
        kind: MachineConfigPool
        name: "{{ item }}"
        definition:
          metadata:
            labels:
              custom-kubelet: allocatable
      loop:
        - master
        - infra
        - worker
    - name: Create KubeletConfig
      k8s:
        state: present
        definition:
          apiVersion: machineconfiguration.openshift.io/v1
          kind: KubeletConfig
          metadata:
            name: allocatable
          spec:
            machineConfigPoolSelector:
              matchLabels:
                custom-kubelet: allocatable
            kubeletConfig:
              kubeReserved:
                cpu: 500m
                memory: 1Gi
                ephemeral-storage: 1Gi
              systemReserved:
                cpu: 500m
                memory: 1Gi
                ephemeral-storage: 1Gi

- name: Get Infrastructure Name
  k8s_info:
    api_version: config.openshift.io/v1
    kind: Infrastructure
    name: cluster
  register: infra_info

- name: Enable Autoscaler
  block:
    - name: Create ClusterAutoscaler
      k8s:
        state: present
        definition:
          apiVersion: autoscaling.openshift.io/v1
          kind: ClusterAutoscaler
          metadata:
            name: default
          spec:
            podPriorityThreshold: -10
            resourceLimits:
              maxNodesTotal: 18
              cores:
                min: 2
                max: 4
              memory:
                min: 8
                max: 16
            scaleDown:
              enabled: true
    - name: Create Infra MachineAutoscaler
      k8s:
        state: present
        definition:
          apiVersion: autoscaling.openshift.io/v1beta1
          kind: MachineAutoscaler
          metadata:
            name: infra-us-east-2{{ item }}
            namespace: openshift-machine-api
          spec:
            minReplicas: 1
            maxReplicas: 3
            scaleTargetRef:
              apiVersion: machine.openshift.io/v1beta1
              kind: MachineSet
              name: "{{ infra_info.resources[0].status.infrastructureName }}-infra-us-east-2{{ item }}"
      loop: ['a', 'b', 'c']
    - name: Create Worker MachineAutoscaler
      k8s:
        state: present
        definition:
          apiVersion: autoscaling.openshift.io/v1beta1
          kind: MachineAutoscaler
          metadata:
            name: worker-us-east-2{{ item }}
            namespace: openshift-machine-api
          spec:
            minReplicas: 1
            maxReplicas: 2
            scaleTargetRef:
              apiVersion: machine.openshift.io/v1beta1
              kind: MachineSet
              name: "{{ infra_info.resources[0].status.infrastructureName }}-worker-us-east-2{{ item }}"
      loop: ['a', 'b', 'c']

- name: Get ClusterVersion
  k8s_info:
    api_version: config.openshift.io/v1
    kind: ClusterVersion
    name: version
  register: clusterversion
      
- name: Install Descheduler
  block:
    - name: Create openshift-kube-descheduler-operator namespace
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: openshift-kube-descheduler-operator
            annotations:
              openshift.io/node-selector: ""
              scheduler.alpha.kubernetes.io/defaultTolerations: '[{"operator": "Exists"}]'
    - name: Create openshift-kube-descheduler-operator OperatorGroup
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: openshift-kube-descheduler-operator
            namespace: openshift-kube-descheduler-operator
          spec:
            targetNamespaces:
              - openshift-kube-descheduler-operator
    - name: Create cluster-kube-descheduler-operator Subscription
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: cluster-kube-descheduler-operator
            namespace: openshift-kube-descheduler-operator
          spec:
            channel: "{{ clusterversion.resources[0].spec.channel.split('-')[1] }}"
            installPlanApproval: Automatic
            name: cluster-kube-descheduler-operator
            source: redhat-operators
            sourceNamespace: openshift-marketplace
    - name: Create KubeDescheduler
      k8s:
        state: present
        definition: "{{ lookup('file', 'kube-descheduler.yml') }}"

- name: Move routers to infra nodes and scale up to 3
  k8s:
    api_version: operator.openshift.io/v1
    kind: IngressController
    namespace: openshift-ingress-operator
    name: default
    definition:
      spec:
        nodePlacement:
          nodeSelector:
            matchLabels:
              node-role.kubernetes.io/infra: ""
          tolerations:
          - effect: NoSchedule
            key: infra
            value: reserved
          - effect: NoExecute
            key: infra
            value: reserved
        replicas: 3

- name: Move registry to infra nodes and scale up to 3
  k8s:
    api_version: imageregistry.operator.openshift.io/v1
    kind: Config
    name: cluster
    definition:
      spec:
        replicas: 3
        nodeSelector:
          node-role.kubernetes.io/infra: ""
        tolerations:
        - effect: NoSchedule
          key: infra
          value: reserved
        - effect: NoExecute
          key: infra
          value: reserved

- name: Move cluster-monitoring stack to infra nodes and add persistent storage
  k8s:
    state: present
    definition: "{{ lookup('file', 'cluster-monitoring-config.yml') }}"

- name: Install Cluster Logging
  block:
    - name: Create openshift-operators-redhat namespace
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: openshift-operators-redhat
            annotations:
              openshift.io/node-selector: ""
            labels:
              openshift.io/cluster-monitoring: "true"
    - name: Create openshift-logging namespace
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: openshift-logging
            annotations:
              openshift.io/node-selector: ""
            labels:
              openshift.io/cluster-monitoring: "true"
    - name: Create openshift-operators-redhat OperatorGroup
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: openshift-operators-redhat
            namespace: openshift-operators-redhat
          spec: {}
    - name: Create elasticsearch-operator Subscription
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: elasticsearch-operator
            namespace: openshift-operators-redhat
          spec:
            channel: "{{ clusterversion.resources[0].spec.channel.split('-')[1] }}"
            installPlanApproval: Automatic
            name: elasticsearch-operator
            source: redhat-operators
            sourceNamespace: openshift-marketplace
    - name: Create openshift-logging OperatorGroup
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: openshift-logging
            namespace: openshift-logging
          spec:
            targetNamespaces:
              - openshift-logging
    - name: Create cluster-logging Subscription
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: cluster-logging
            namespace: openshift-logging
          spec:
            channel: "{{ clusterversion.resources[0].spec.channel.split('-')[1] }}"
            installPlanApproval: Automatic
            name: cluster-logging
            source: redhat-operators
            sourceNamespace: openshift-marketplace
    - name: Create Cluster Logging instance
      k8s:
        state: present
        definition: "{{ lookup('file', 'cluster-logging-instance.yml') }}"

